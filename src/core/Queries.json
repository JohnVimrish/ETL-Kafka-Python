{
    "contacts": {
    "target_table_name"     :"CONTACTS",
    "insert_query"          :"INSERT INTO kafkapoc.contacts as con (contact_id,first_name,last_name,email,phone,customer_id)  values (%s,%s,%s,%s,%s,%s) ON CONFLICT (contact_id)  DO UPDATE SET first_name = coalesce (EXCLUDED.first_name,con.first_name), last_name = coalesce (EXCLUDED.last_name,con.last_name),email = coalesce (EXCLUDED.email,con.email), phone = coalesce (EXCLUDED.phone,con.phone), customer_id = coalesce (EXCLUDED.customer_id,con.customer_id),dwh_update_dt = now() ;",
    "create_index"          :" "
                 },
    "countries": {
    "target_table_name"     :"COUNTRIES",
    "insert_query"          :"INSERT INTO kafkapoc.countries as countries (country_id,country_name,region_id)  values (%s,%s,%s) ON CONFLICT (country_id)  DO UPDATE SET country_name = coalesce(EXCLUDED.country_name,countries.country_name),region_id = coalesce(EXCLUDED.region_id,countries.region_id),dwh_update_dt = now() ;",
    "create_index"          :" "
                 },
    "locations": {
    "target_table_name"     :"LOCATIONS", 
    "insert_query"          :"INSERT INTO kafkapoc.locations as loc (location_id,address,postal_code,city,state,country_id) values (%s,%s,%s,%s,%s,%s) ON CONFLICT (location_id) DO UPDATE SET address = coalesce (EXCLUDED.address,loc.address),postal_code = coalesce (EXCLUDED.postal_code,loc.postal_code),city = coalesce (EXCLUDED.city,loc.city),state = coalesce (EXCLUDED.state,loc.state),country_id = coalesce (EXCLUDED.country_id,loc.country_id),dwh_update_dt = now() ;",
    "create_index"          :" "
                 },
    "order_items": {
    "target_table_name"     :"ORDER_ITEMS",  
    "insert_query"          :"INSERT INTO kafkapoc.order_items as ord_itm (order_id,item_id,product_id,quantity,unit_price)  values (%s,%s,%s,%s,%s) ON CONFLICT (order_id,item_id)  DO UPDATE SET product_id  = coalesce (EXCLUDED.product_id,ord_itm.product_id),quantity  = coalesce (EXCLUDED.quantity,ord_itm.quantity),unit_price  = coalesce (EXCLUDED.unit_price,ord_itm.unit_price),dwh_update_dt = now() ;",
    "create_index"          :" "
                 } ,
    "kafka_test2": {
    "target_table_name"     :"KAFKA_TEST2",
    "insert_query"          :"INSERT INTO kafkapoc.kafka_test2 (message,update_dt)  values (%s,%s) ; ",
    "create_index"          :" "
                 },
    "product_categories": {
    "target_table_name"     :"PRODUCT_CATEGORIES",
    "insert_query"          :"INSERT INTO kafkapoc.product_categories  as prod_cat (category_id,category_name)  values (%s,%s) ON CONFLICT (category_id) DO UPDATE SET category_name  = coalesce (EXCLUDED.category_name,prod_cat.category_name),dwh_update_dt = now() ;",
    "create_index"          :" "
                 },
    "employees": {
    "target_table_name"     :"EMPLOYEES",
    "insert_query"          :"INSERT INTO kafkapoc.employees   (employee_id,first_name,last_name,email,phone,hire_date,manager_id,job_title)  values (%s,%s,%s,%s,%s,%s,%s,%s) ON CONFLICT (employee_id) DO UPDATE SET first_name = EXCLUDED.first_name,last_name = EXCLUDED.last_name,email = EXCLUDED.email,phone = EXCLUDED.phone,hire_date = EXCLUDED.hire_date,job_title = EXCLUDED.job_title,manager_id = EXCLUDED.manager_id,dwh_update_dt = now() ;",
    "create_index"          :"" ,
    "delete_query"          :"delete from kafkapoc.employees as emp  where emp.employee_id = %s "
                 },
    "kafka_test": {
    "target_table_name"     :"KAFKA_TEST",
    "insert_query"          :"INSERT INTO kafkapoc.kafka_test (input_message,create_dt,update_dt)  values (%s,%s,%s) ; ",
    "create_index"          :" "
                },
    "orders": {
    "target_table_name"     :"ORDERS",
    "insert_query"          :"INSERT INTO kafkapoc.orders as ord (order_id,customer_id,status,salesman_id,order_timestamp)  values (%s,%s,%s,%s,%s) ON CONFLICT (order_id) DO UPDATE SET customer_id  = coalesce (EXCLUDED.customer_id,ord.customer_id),status  = coalesce (EXCLUDED.status,ord.status),salesman_id  = coalesce (EXCLUDED.salesman_id,ord.salesman_id),order_timestamp  = coalesce (EXCLUDED.order_timestamp,ord.order_timestamp),dwh_update_dt = now() ;",
    "create_index"          :" "
                 },
    "customers": {
    "target_table_name"     :"CUSTOMERS",
    "insert_query"          :"INSERT INTO kafkapoc.customers as cust (customer_id,name,address,website,credit_limit)  values (%s,%s,%s,%s,%s) ON CONFLICT (customer_id) DO UPDATE SET name = coalesce(EXCLUDED.name,cust.name),address = coalesce (EXCLUDED.address,cust.address),website = coalesce (EXCLUDED.website,cust.website),credit_limit = coalesce (EXCLUDED.customer_id,cust.credit_limit),dwh_update_dt = now() ;",
    "create_index"          :" "
                 },
    "products": {
    "target_table_name"     :"PRODUCTS",
    "insert_query"          :"INSERT INTO kafkapoc.products as prod (product_id,product_name,description,standard_cost,list_price,category_id)  values (%s,%s,%s,%s,%s,%s) ON CONFLICT (product_id) DO UPDATE SET product_name   = coalesce (EXCLUDED.product_name,prod.product_name),description  = coalesce (EXCLUDED.description,prod.description),standard_cost  = coalesce (EXCLUDED.standard_cost,prod.standard_cost),list_price  = coalesce (EXCLUDED.list_price,prod.list_price),category_id  = coalesce (EXCLUDED.category_id,prod.category_id),dwh_update_dt = now() ;",
    "create_index"          :" "
                 },
    "regions": {
    "target_table_name"     :"REGIONS",
    "insert_query"          :"INSERT INTO kafkapoc.regions as reg  (region_id,region_name) values  (%s,%s) ON CONFLICT (region_id)   DO UPDATE SET region_name = coalesce (EXCLUDED.region_name,reg.region_name),dwh_update_dt = now() ;"  ,
    "create_index"          :" "
                 },
    "inventories": {
    "target_table_name"     :"INVENTORIES",
    "insert_query"          :"INSERT INTO kafkapoc.inventories as inv (product_id,warehouse_id,quantity)  values (%s,%s,%s) ON CONFLICT (product_id,warehouse_id) DO UPDATE SET quantity = coalesce (EXCLUDED.quantity,inv.quantity),dwh_update_dt = now() ;",
    "create_index"          :" "
                 },
    "warehouses": {
    "target_table_name"     :"WAREHOUSES",
    "insert_query"          :"INSERT INTO kafkapoc.warehouses as warh (warehouse_id,warehouse_name,location_id)  values (%s,%s,%s) ON CONFLICT (warehouse_id) DO UPDATE SET warehouse_name = coalesce (EXCLUDED.warehouse_name,warh.warehouse_name),location_id = coalesce (EXCLUDED.location_id,warh.location_id),dwh_update_dt = now() ;",
    "create_index"          :" "
                 },
    "million_record_test": {
    "target_table_name"     :"MILLION_RECORD_TEST",
    "insert_query"          :"INSERT INTO kafkapoc.million_record_test as mill  (id,sample_test)  values (%s,%s) ON CONFLICT (id) DO UPDATE SET sample_test = coalesce (EXCLUDED.sample_test,mill.sample_test),dwh_update_dt = now() ;",
    "create_index"          :" "
                 },
    "data_type_test": {
    "target_table_name"     :"DATA_TYPE_TEST",
    "insert_query"          :"INSERT INTO kafkapoc.data_type_test (array_test, nvarchar_test, json_test, char_test, nchar_test, num_pre_scale_test,binary_double_test, binary_float_test, real_test, smallint_test, float_test,double_precision_test, decimal_test, date_test, tst_frac_pre_test, tst_tz_frac_pre_test) VALUES(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s) ON CONFLICT (smallint_test) DO UPDATE SET array_test = EXCLUDED.array_test, nvarchar_test = EXCLUDED.nvarchar_test, json_test = EXCLUDED.json_test, char_test = EXCLUDED.char_test, nchar_test = EXCLUDED.nchar_test, num_pre_scale_test = EXCLUDED.num_pre_scale_test, binary_double_test = EXCLUDED.binary_double_test, binary_float_test = EXCLUDED.binary_float_test, real_test = EXCLUDED.real_test, float_test = EXCLUDED.float_test, double_precision_test = EXCLUDED.double_precision_test, decimal_test = EXCLUDED.decimal_test, date_test = EXCLUDED.date_test, tst_frac_pre_test = EXCLUDED.tst_frac_pre_test, tst_tz_frac_pre_test = EXCLUDED.tst_tz_frac_pre_test,dwh_update_dt = now() ;",
    "create_index"          :" "
                 }
}